# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: Release
run-name: Release ${{github.ref_name}}

on:
  push:
    tags: ['*.*.*']

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        build_type: [Release]
        include:
          - os: ubuntu-latest
            os_family: linux
            arch: x86_64
          # macos-latest image is aarch 64 based
          - os: macos-latest
            os_family: osx
            arch: aarch_64
          # macos-13 image is the most recent x86 based macos
          - os: macos-13
            os_family: osx
            arch: x86_64
          - os: windows-latest
            os_family: windows
            arch: x86_64

    steps:
    - name: Parse version
      # Strip 'v' prefix of the tag
      run: |
        export proto_tag=${{ github.ref_name }}
        echo "proto_version=${proto_tag#v}" >> "$GITHUB_ENV"

    - name: Show version
      run: |
        echo ${{ github.ref_name }}
        echo $proto_version
    
    - name: Checkout Protobuf
      uses: actions/checkout@v4

    - name: Checkout submodule
      run: git submodule update --init --recursive

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: >
        cmake -B ${{ github.workspace }}/build
        -G "Unix Makefiles"
        -DCMAKE_CXX_STANDARD=14
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

    #- name: Build Protobuf
    #  run: cmake --build ${{github.workspace}}/build

    #- name: Rename protoc
    #  if: ${{ matrix.os_family == 'linux' || matrix.os_family == 'osx' }}
    #  run: mv $(readlink -f ${{ github.workspace }}/build/protoc) ${{ github.workspace }}/build/protoc.exe

    #- name: Release protoc
    #  uses: softprops/action-gh-release@v2.0.8
    #  with:
    #    files: |
    #      ${{ github.workspace }}/build/protoc-${{ matrix.os_family }}-${{ matrix.arch }}.exe

    #- name: Setup Java JDK
    #  if: ${{ matrix.os == 'ubuntu-latest' }}
    #  uses: actions/setup-java@v4.2.2
    #  with:
    #    java-version: 8
    #    distribution: temurin

    #- name: Build Java lib
    #  if: ${{ matrix.os == 'ubuntu-latest' }}
    #  run: |
    #    cd ${{ github.workspace }}/java
    #    mvn package -pl core
    #    mv pom.xml protobuf-parent.
